{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[node]/.next/server/app/api/auth/[...nextauth]/route/actions.js"],"sourcesContent":["__turbopack_export_value__({\n});"],"names":[],"mappings":"AAAA,2BAA2B,CAC3B"}},
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/api/auth/[...nextauth]/auth.ts"],"sourcesContent":["import type { NextAuthOptions } from \"next-auth\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\n\r\nexport const authOptions: NextAuthOptions = {\r\n  pages: {\r\n    signIn: \"/auth/login\",\r\n  },\r\n  session: {\r\n    strategy: \"jwt\",\r\n  },\r\n  providers: [\r\n    CredentialsProvider({\r\n      name: \"Sign in\",\r\n      credentials: {\r\n        username: {\r\n          label: \"Name\",\r\n          type: \"username\",\r\n          placeholder: \"Name\",\r\n        },\r\n        password: { label: \"Password\", type: \"password\" },\r\n      },\r\n      async authorize(credentials, req) {\r\n        console.log(\"credentials\", credentials);\r\n        const res = await fetch(\"https://dummyjson.com/auth/login\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            username: credentials?.username,\r\n            password: credentials?.password,\r\n            expiresInMins: 1, // optional\r\n          }),\r\n        });\r\n        const user = await res.json();\r\n        // If no error and we have user data, return it\r\n        if (res.ok && user) {\r\n          return user;\r\n        }\r\n        // Return null if user data could not be retrieved\r\n        return null;\r\n      },\r\n    }),\r\n  ],\r\n  callbacks: {\r\n    async jwt({ token, user, account, profile, isNewUser }) {\r\n      console.log(\"token\", token);\r\n      if (account) {\r\n        token.user = user;\r\n      }\r\n      return token;\r\n    },\r\n    async session({ session, token }) {\r\n      session.user = token.user as any;\r\n      return session;\r\n    },\r\n  },\r\n  secret: process.env.NEXTAUTH_SECRET,\r\n};\r\n"],"names":[],"mappings":";;;;;;AAGO,MAAM,cAA+B;IAC1C,OAAO;QACL,QAAQ;IACV;IACA,SAAS;QACP,UAAU;IACZ;IACA,WAAW;QACT,6JAAoB;YAClB,MAAM;YACN,aAAa;gBACX,UAAU;oBACR,OAAO;oBACP,MAAM;oBACN,aAAa;gBACf;gBACA,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW,EAAE,GAAG;gBAC9B,QAAQ,GAAG,CAAC,eAAe;gBAC3B,MAAM,MAAM,MAAM,MAAM,oCAAoC;oBAC1D,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,MAAM,KAAK,SAAS,CAAC;wBACnB,UAAU,aAAa;wBACvB,UAAU,aAAa;wBACvB,eAAe;oBACjB;gBACF;gBACA,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,+CAA+C;gBAC/C,IAAI,IAAI,EAAE,IAAI,MAAM;oBAClB,OAAO;gBACT;gBACA,kDAAkD;gBAClD,OAAO;YACT;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE;YACpD,QAAQ,GAAG,CAAC,SAAS;YACrB,IAAI,SAAS;gBACX,MAAM,IAAI,GAAG;YACf;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,QAAQ,IAAI,GAAG,MAAM,IAAI;YACzB,OAAO;QACT;IACF;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/api/auth/[...nextauth]/route.js"],"sourcesContent":["import { authOptions } from \"./auth\";\r\nimport NextAuth from \"next-auth\";\r\n\r\nconst handler = NextAuth(authOptions);\r\nexport { handler as GET, handler as POST };\r\n"],"names":[],"mappings":";;;;;;;;;AAGA,MAAM,UAAU"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}